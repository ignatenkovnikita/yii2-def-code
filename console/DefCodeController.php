<?php

namespace ignatenkovnikita\defcode\console;

/**
 * Copyright (C) $user$, Inc - All Rights Reserved
 *
 *  <other text>
 * @file        DefCodeController.php
 * @author      ignatenkovnikita
 * @date        $date$
 */

use ignatenkovnikita\defcode\models\DefCode;
use ignatenkovnikita\defcode\models\DefCodeFactory;
use ignatenkovnikita\defcode\Module;
use Yii;
use yii\base\Exception;

/**
 * Created by PhpStorm.
 * User: ignatenkovnikita
 * Web Site: http://IgnatenkovNikita.ru
 */
class DefCodeController extends \yii\console\Controller
{
    /** @var Module $moduleDefCode */
    protected $moduleDefCode;

    public $basePath;

    public function init()
    {
        $this->basePath = \Yii::getAlias('@console/runtime/');

        $this->moduleDefCode = \Yii::$app->getModule('def-code');
        if (empty($this->moduleDefCode)) {
            throw new Exception('Module def-code not exist');
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function actionImport()
    {
        foreach ($this->moduleDefCode->listUrl as $name => $url) {
            $fileName = $this->basePath . $name . '.csv';
            if (file_exists($fileName) && filesize($fileName)) {
                $this->log('start file ' . $fileName . ', type ' . $name);
                $this->handleFile($fileName, $name);
                $this->log('end file ' . $fileName . ', type ' . $name);
            } else {
                $this->log('not correct file ' . $fileName);
            }
        }
    }

    public function actionDownloadAll()
    {
        $this->log('start download all');


        foreach ($this->getList() as $name => $url) {


            $fileName = $this->basePath . $name . '.csv';
            $this->log('download ' . $fileName);
            if (file_exists($fileName)) {
                $newFileName = $this->basePath . $name . '_' . date('Y-m-d-H-i-s', filemtime($fileName)) . '.csv';
                rename($fileName, $newFileName);
            }
            file_put_contents($fileName, fopen($url, 'r'));
        }


    }


    protected function getList()
    {
        return $this->moduleDefCode->listUrl;
    }


    protected function log($text)
    {
        echo date('Y-m-d H:i:s') . ' ' . $text . PHP_EOL;
    }


    protected function handleFile($file, $type)
    {
        $lines = file($file);
        unset($lines[0]);

        $transaction = Yii::$app->db->beginTransaction();

        DefCode::deleteAll('type = :type', [':type' => $type]);

        $insertLines = 0;
        foreach ($lines as $i => $line) {
            try {
                $model = DefCodeFactory::createFromLine($line);
                $model->type = $type;
                if ($model->validate()) {
                    $model->save();
                    $insertLines++;
                } else {
                    $this->log('error save line ' . $i . ', errors ' . print_r($model->errors, true));
                }
            } catch (Exception $e) {
                $this->log("Exception while inserting line " . $i . ' ' . $line . ', error ' . $e->getMessage());
            }
        }
        $transaction->commit();
        $this->log('insert ' . $insertLines);
    }

}